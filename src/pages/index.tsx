import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";

import { trpc } from "../utils/trpc";
import Link from "next/link";

const Home: NextPage = () => {

  const { data: session } = useSession();


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <nav className="mx-auto max-w-7xl w-full py-4">
        <div className="w-full flex justify-between">
          <Link href="/">
            <h1 className="font-bold text-3xl py-2 px-4 text-neutral-800 hover:text-blue-500 transition delay-[25]">
              CharityWalk
            </h1>
          </Link>

          <div className="flex space-x-4 items-center">
            <Link href="/">
              <div>Menu 1</div>
            </Link>
            <Link href="/">
              <div>Menu 2</div>
            </Link>
            <Link href="/">
              <div>Menu 3</div>
            </Link>
            <Link href="/">
              <div>Menu 4</div>
            </Link>
          </div>

          <div className="flex items-center space-x-4">
            {
              session ?
                (
                  <>
                    <div>Signed in as {session.user?.email}</div>
                    <button className="px-3 py-2 bg-red-300 rounded-full hover:bg-red-500 text-red-800 delay-[25] transition font-bold" onClick={() => signOut()} >logout</button>
                  </>

                ) : (
                  <button className="px-3 py-2 bg-neutral-300 rounded-3xl hover:bg-neutral-500 text-neutral-800 delay-75 transition font-bold" onClick={() => signIn()} >login</button>
                )

            }
          </div>
        </div>
      </nav>
      <main className="flex min-h-screen flex-col items-center justify-center">

      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
